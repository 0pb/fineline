[gd_scene load_steps=8 format=2]

[ext_resource path="res://assets/white_rect.png" type="Texture" id=1]
[ext_resource path="res://assets/noise_combined.png" type="Texture" id=2]
[ext_resource path="res://assets/light.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends StaticBody2D


export var true_if_active = true
var true_if_heaven = true
onready var node_collision = get_node(\"collision\")
export var new_gravity = -10

export var in_hell = false
export var in_heaven = false


func _ready():
    node_collision.connect(\"body_entered\", self, \"_on_beam_entered\")
    node_collision.connect(\"body_exited\", self, \"_on_beam_exited\")
    
    if in_hell:
        add_to_group(\"hell\")
    if in_heaven:
        add_to_group(\"heaven\")


var dict_gravity = {}


func activate():
    true_if_active = true
func deactivate():
    true_if_active = false


func _physics_process(delta):
    if true_if_active and true_if_heaven:
        visible = true
        node_collision.monitoring = true
    else:
        visible = false
        node_collision.monitoring = false


func _on_beam_entered(body):
    if \"GRAVITY\" in body:
        dict_gravity[body] = body.GRAVITY
        body.GRAVITY = new_gravity


func _on_beam_exited(body):
    if \"GRAVITY\" in body:
        body.GRAVITY = dict_gravity[body]


func disable_on_world_change(bool_):
    if bool_:
        true_if_heaven = true
    else:
        true_if_heaven = false
"

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform sampler2D noise_img;
uniform float speed = 1.0;
uniform vec4 smoke_color : hint_color;

void fragment(){
	vec2 uv1 = vec2(UV.x + TIME*speed, UV.y);
	vec2 uv2 = vec2(UV.x - TIME*speed, UV.y);
	vec2 uv3 = vec2(UV.x, UV.y + TIME*speed);
	
	
	float noise_r = texture( noise_img, uv1 ).r;
	float noise_g = texture( noise_img, uv2 ).g;
	float noise_b = texture( noise_img, uv3 ).b;
	
	vec3 new_color = vec3(noise_r, noise_g, noise_b);
	
	float new_alpha = noise_r * noise_g * noise_b;
	
	COLOR.rgb = smoke_color.rgb;//texture(TEXTURE, UV).rgb;
	COLOR.a = clamp(new_alpha * 5.0  * texture(TEXTURE, UV).a, 0.0, 1.0);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/speed = 0.001
shader_param/smoke_color = Color( 0, 0.458824, 0.705882, 0.498039 )
shader_param/noise_img = ExtResource( 2 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 32, 32 )

[node name="beam" type="StaticBody2D"]
script = SubResource( 1 )

[node name="Sprite2" type="Sprite" parent="."]
material = SubResource( 4 )
texture = ExtResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
visible = false
self_modulate = Color( 0, 1, 0.882353, 0.152941 )
texture = ExtResource( 1 )

[node name="collision" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="collision"]
shape = SubResource( 2 )
